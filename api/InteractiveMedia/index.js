const { fromEnv } = require("@aws-sdk/credential-providers");
const { HttpRequest } = require("@smithy/protocol-http");
const { S3RequestPresigner } = require("@aws-sdk/s3-request-presigner");
const { parseUrl } = require("@smithy/url-parser");
const { formatUrl } = require("@aws-sdk/util-format-url");
const { Hash } = require("@smithy/hash-node");
const { DynamoDBClient } = require("@aws-sdk/client-dynamodb");
const {
  DynamoDBDocumentClient,
  PutCommand,
  QueryCommand,
} = require("@aws-sdk/lib-dynamodb");
const express = require("express");
const serverless = require("serverless-http");
const uuid = require("uuid");

const app = express();
const client = new DynamoDBClient();
const dynamoDbClient = DynamoDBDocumentClient.from(client);

const errorMessage = "Error submitting form ";

app.use(express.json());
app.use(express.urlencoded()); // needed to handle form-data submissions

app.use((req, res, next) => {
  console.log("New request at time:", Date.now(), "to path", req.path);
  console.log("Request body:", req.body);

  // call so continues to routes
  next();
});

app.get("/media/:eventId/photo_mosaic", async function (req, res) {
  try {
    const eventId = req.params.eventId;
    const pageSize = req.query.pageSize ?? 50; // default to max
    const lek = req.query.lek; // last evaluated sort key, we know the partition key from the eventId
    const since = req.query.since;
    if (!eventId) {
      res.status(404).json({
        result: "error",
        message: "Event not found",
      });
    } else {
      // gets active images for event matching eventId
      const params = {
        TableName: process.env.INTERACTIVE_MEDIA_TABLE,
        Limit: Number(pageSize),
        KeyConditionExpression: "#npk = :vpk AND #nsk >= :vsk",
        FilterExpression: "#n0 = :v0",
        ExpressionAttributeNames: {
          "#npk": "event_name",
          "#nsk": "image_key",
          "#n0": "active",
          "#px": "position_x",
          "#py": "position_y",
        },
        ExpressionAttributeValues: {
          ":vpk": eventId,
          ":vsk": `image.${since ?? 0}`,
          ":v0": true,
        },
        Select: "SPECIFIC_ATTRIBUTES", // not technically needed since we include ProjectionExpression
        ProjectionExpression: "full_image,submitted_by,message,#px,#py",
        ScanIndexForward: false, // sort descending so most recent first
      };
      if (lek) {
        params.ExclusiveStartKey = {
          event_name: eventId,
          image_key: lek,
        };
      }

      console.log("Submitting Query request:", params);
      const { Items, LastEvaluatedKey } = await dynamoDbClient.send(
        new QueryCommand(params)
      );

      // return the last evaluate key as well so the client can handle when to query for more items
      res.json({ lek: LastEvaluatedKey?.image_key, items: Items });
    }
  } catch (error) {
    console.log(error);
    res.status(500).json({
      result: "error",
      message: "There was an error getting interactive media",
    });
  }
});

app.post("/media/:eventId/photo_mosaic", async function (req, res) {
  try {
    const eventId = req.params.eventId;
    const { name, message, fileName, fileType } = req.body;
    if (!eventId) {
      res.status(404).json({
        result: "error",
        message: "Event not found",
      });
    } else if (typeof name !== "string") {
      res.status(400).json({
        result: "error",
        message: errorMessage + "(field: name)",
      });
    } else if (typeof message !== "string") {
      res.status(400).json({
        result: "error",
        message: errorMessage + "(field: message)",
      });
    } else {
      // check for profanity
      if (containsProfanity(name, message)) {
        res.status(200).json({
          result: "error",
          message: `Sorry, no profanity is allowed!`,
        });
      } else {
        const submittedAt = Date.now();
        // get file extension and generate random uuid to prevent collisions/overwrites
        const extension = fileName.split(".").pop().toLowerCase();
        const imageKey = `${submittedAt}-${uuid.v4()}`; // include current date timestamp so sortable

        // create a presigned url for uploading files
        const fullS3UploadKey = `${process.env.APP_STAGE}/interactive_media/photo_mosaic/${eventId}/upload/${imageKey}.${extension}`;
        const presignedUrl = await createPresignedUrlWithoutClient(
          fullS3UploadKey,
          fileType
        );
        console.log({ presignedUrl });

        // form our ddb entry
        const params = {
          TableName: process.env.INTERACTIVE_MEDIA_TABLE,
          Item: {
            event_name: eventId.toLowerCase(), // partition key
            image_key: `image.${imageKey}`, // sort key
            submission_timestamp: submittedAt,
            submitted_by: name ?? "",
            message: message ?? "",
            full_image: `https://${process.env.STATIC_CONTENT_BUCKET}/${process.env.APP_STAGE}/interactive_media/photo_mosaic/${eventId}/processed/${imageKey}-resized.${extension}`,
            thumbnail_image: `https://${process.env.STATIC_CONTENT_BUCKET}/${process.env.APP_STAGE}/interactive_media/photo_mosaic/${eventId}/processed/${imageKey}-thumbnail.${extension}`,
            active: false, // default to false, will be set to true once image processing completes
          },
        };

        console.log("Submitting Put request:", params);
        await dynamoDbClient.send(new PutCommand(params));
        res.status(200).json({
          result: "success",
          presignedUrl,
          message: "Thank you for your submission!",
        });
      }
    }
  } catch (error) {
    console.log(error);
    res.status(500).json({
      result: "error",
      message: "There was an error submitting your photo.",
    });
  }
});

app.use((req, res, next) => {
  return res.status(404).json({
    result: "error",
    message: "Path not found",
  });
});

// for local testing
app.listen(3030, () => {
  console.log(`Example app listening on port 3030`);
});
module.exports.handler = serverless(app);

// ============= HELPERS ==============

const createPresignedUrlWithoutClient = async (key, fileType) => {
  const url = parseUrl(`https://${process.env.STATIC_CONTENT_BUCKET}/${key}`);
  const presigner = new S3RequestPresigner({
    credentials: fromEnv(),
    region: process.env.STATIC_BUCKET_REGION,
    sha256: Hash.bind(null, "sha256"),
  });
  const signedUrlObject = await presigner.presign(
    new HttpRequest({
      ...url,
      method: "PUT",
      headers: {
        "Content-Type": fileType,
      },
    }),
    {
      expiresIn: process.env.UPLOAD_URL_EXPIRATION_SECONDS,
    }
  );
  return formatUrl(signedUrlObject);
};

const containsProfanity = (name, message) => {
  // from https://www.cs.cmu.edu/~biglou/resources/bad-words.txt
  // document.body.getElementsByTagName("pre")[0].textContent.split("\n")
  const blocked = [
    "abbo",
    "abo",
    "abortion",
    "abuse",
    "addict",
    "addicts",
    "adult",
    "africa",
    "african",
    "alla",
    "allah",
    "alligatorbait",
    "amateur",
    "american",
    "anal",
    "analannie",
    "analsex",
    "angie",
    "angry",
    "anus",
    "arab",
    "arabs",
    "areola",
    "argie",
    "aroused",
    "arse",
    "arsehole",
    "asian",
    "ass",
    "assassin",
    "assassinate",
    "assassination",
    "assault",
    "assbagger",
    "assblaster",
    "assclown",
    "asscowboy",
    "asses",
    "assfuck",
    "assfucker",
    "asshat",
    "asshole",
    "assholes",
    "asshore",
    "assjockey",
    "asskiss",
    "asskisser",
    "assklown",
    "asslick",
    "asslicker",
    "asslover",
    "assman",
    "assmonkey",
    "assmunch",
    "assmuncher",
    "asspacker",
    "asspirate",
    "asspuppies",
    "assranger",
    "asswhore",
    "asswipe",
    "athletesfoot",
    "attack",
    "australian",
    "babe",
    "babies",
    "backdoor",
    "backdoorman",
    "backseat",
    "badfuck",
    "balllicker",
    "balls",
    "ballsack",
    "banging",
    "baptist",
    "barelylegal",
    "barf",
    "barface",
    "barfface",
    "bast",
    "bastard ",
    "bazongas",
    "bazooms",
    "beaner",
    "beast",
    "beastality",
    "beastial",
    "beastiality",
    "beatoff",
    "beat-off",
    "beatyourmeat",
    "beaver",
    "bestial",
    "bestiality",
    "bi",
    "biatch",
    "bible",
    "bicurious",
    "bigass",
    "bigbastard",
    "bigbutt",
    "bigger",
    "bisexual",
    "bi-sexual",
    "bitch",
    "bitcher",
    "bitches",
    "bitchez",
    "bitchin",
    "bitching",
    "bitchslap",
    "bitchy",
    "biteme",
    "black",
    "blackman",
    "blackout",
    "blacks",
    "blind",
    "blow",
    "blowjob",
    "boang",
    "bogan",
    "bohunk",
    "bollick",
    "bollock",
    "bomb",
    "bombers",
    "bombing",
    "bombs",
    "bomd",
    "bondage",
    "boner",
    "bong",
    "boob",
    "boobies",
    "boobs",
    "booby",
    "boody",
    "boom",
    "boong",
    "boonga",
    "boonie",
    "booty",
    "bootycall",
    "bountybar",
    "bra",
    "brea5t",
    "breast",
    "breastjob",
    "breastlover",
    "breastman",
    "brothel",
    "bugger",
    "buggered",
    "buggery",
    "bullcrap",
    "bulldike",
    "bulldyke",
    "bullshit",
    "bumblefuck",
    "bumfuck",
    "bunga",
    "bunghole",
    "buried",
    "burn",
    "butchbabes",
    "butchdike",
    "butchdyke",
    "butt",
    "buttbang",
    "butt-bang",
    "buttface",
    "buttfuck",
    "butt-fuck",
    "buttfucker",
    "butt-fucker",
    "buttfuckers",
    "butt-fuckers",
    "butthead",
    "buttman",
    "buttmunch",
    "buttmuncher",
    "buttpirate",
    "buttplug",
    "buttstain",
    "byatch",
    "cacker",
    "cameljockey",
    "cameltoe",
    "canadian",
    "cancer",
    "carpetmuncher",
    "carruth",
    "catholic",
    "catholics",
    "cemetery",
    "chav",
    "cherrypopper",
    "chickslick",
    "children's",
    "chin",
    "chinaman",
    "chinamen",
    "chinese",
    "chink",
    "chinky",
    "choad",
    "chode",
    "christ",
    "christian",
    "church",
    "cigarette",
    "cigs",
    "clamdigger",
    "clamdiver",
    "clit",
    "clitoris",
    "clogwog",
    "cocaine",
    "cock",
    "cockblock",
    "cockblocker",
    "cockcowboy",
    "cockfight",
    "cockhead",
    "cockknob",
    "cocklicker",
    "cocklover",
    "cocknob",
    "cockqueen",
    "cockrider",
    "cocksman",
    "cocksmith",
    "cocksmoker",
    "cocksucer",
    "cocksuck ",
    "cocksucked ",
    "cocksucker",
    "cocksucking",
    "cocktail",
    "cocktease",
    "cocky",
    "cohee",
    "coitus",
    "color",
    "colored",
    "coloured",
    "commie",
    "communist",
    "condom",
    "conservative",
    "conspiracy",
    "coolie",
    "cooly",
    "coon",
    "coondog",
    "copulate",
    "cornhole",
    "corruption",
    "cra5h",
    "crabs",
    "crack",
    "crackpipe",
    "crackwhore",
    "crack-whore",
    "crap",
    "crapola",
    "crapper",
    "crappy",
    "crash",
    "creamy",
    "crime",
    "crimes",
    "criminal",
    "criminals",
    "crotch",
    "crotchjockey",
    "crotchmonkey",
    "crotchrot",
    "cum",
    "cumbubble",
    "cumfest",
    "cumjockey",
    "cumm",
    "cummer",
    "cumming",
    "cumquat",
    "cumqueen",
    "cumshot",
    "cunilingus",
    "cunillingus",
    "cunn",
    "cunnilingus",
    "cunntt",
    "cunt",
    "cunteyed",
    "cuntfuck",
    "cuntfucker",
    "cuntlick ",
    "cuntlicker ",
    "cuntlicking ",
    "cuntsucker",
    "cybersex",
    "cyberslimer",
    "dago",
    "dahmer",
    "dammit",
    "damn",
    "damnation",
    "damnit",
    "darkie",
    "darky",
    "datnigga",
    "dead",
    "deapthroat",
    "death",
    "deepthroat",
    "defecate",
    "dego",
    "demon",
    "deposit",
    "desire",
    "destroy",
    "deth",
    "devil",
    "devilworshipper",
    "dick",
    "dickbrain",
    "dickforbrains",
    "dickhead",
    "dickless",
    "dicklick",
    "dicklicker",
    "dickman",
    "dickwad",
    "dickweed",
    "diddle",
    "die",
    "died",
    "dies",
    "dike",
    "dildo",
    "dingleberry",
    "dink",
    "dipshit",
    "dipstick",
    "dirty",
    "disease",
    "diseases",
    "disturbed",
    "dive",
    "dix",
    "dixiedike",
    "dixiedyke",
    "doggiestyle",
    "doggystyle",
    "dong",
    "doodoo",
    "doo-doo",
    "doom",
    "dope",
    "dragqueen",
    "dragqween",
    "dripdick",
    "drug",
    "drunk",
    "drunken",
    "dumb",
    "dumbass",
    "dumbbitch",
    "dumbfuck",
    "dyefly",
    "dyke",
    "easyslut",
    "eatballs",
    "eatme",
    "eatpussy",
    "ecstacy",
    "ejaculate",
    "ejaculated",
    "ejaculating ",
    "ejaculation",
    "enema",
    "enemy",
    "erect",
    "erection",
    "ero",
    "escort",
    "ethiopian",
    "ethnic",
    "european",
    "evl",
    "excrement",
    "execute",
    "executed",
    "execution",
    "executioner",
    "explosion",
    "facefucker",
    "faeces",
    "fag",
    "fagging",
    "faggot",
    "fagot",
    "failed",
    "failure",
    "fairies",
    "fairy",
    "faith",
    "fannyfucker",
    "fart",
    "farted ",
    "farting ",
    "farty ",
    "fastfuck",
    "fat",
    "fatah",
    "fatass",
    "fatfuck",
    "fatfucker",
    "fatso",
    "fckcum",
    "fear",
    "feces",
    "felatio ",
    "felch",
    "felcher",
    "felching",
    "fellatio",
    "feltch",
    "feltcher",
    "feltching",
    "fetish",
    "fight",
    "filipina",
    "filipino",
    "fingerfood",
    "fingerfuck ",
    "fingerfucked ",
    "fingerfucker ",
    "fingerfuckers",
    "fingerfucking ",
    "fire",
    "firing",
    "fister",
    "fistfuck",
    "fistfucked ",
    "fistfucker ",
    "fistfucking ",
    "fisting",
    "flange",
    "flasher",
    "flatulence",
    "floo",
    "flydie",
    "flydye",
    "fok",
    "fondle",
    "footaction",
    "footfuck",
    "footfucker",
    "footlicker",
    "footstar",
    "fore",
    "foreskin",
    "forni",
    "fornicate",
    "foursome",
    "fourtwenty",
    "fraud",
    "freakfuck",
    "freakyfucker",
    "freefuck",
    "fu",
    "fubar",
    "fuc",
    "fucck",
    "fuck",
    "fucka",
    "fuckable",
    "fuckbag",
    "fuckbuddy",
    "fucked",
    "fuckedup",
    "fucker",
    "fuckers",
    "fuckface",
    "fuckfest",
    "fuckfreak",
    "fuckfriend",
    "fuckhead",
    "fuckher",
    "fuckin",
    "fuckina",
    "fucking",
    "fuckingbitch",
    "fuckinnuts",
    "fuckinright",
    "fuckit",
    "fuckknob",
    "fuckme ",
    "fuckmehard",
    "fuckmonkey",
    "fuckoff",
    "fuckpig",
    "fucks",
    "fucktard",
    "fuckwhore",
    "fuckyou",
    "fudgepacker",
    "fugly",
    "fuk",
    "fuks",
    "funeral",
    "funfuck",
    "fungus",
    "fuuck",
    "gangbang",
    "gangbanged ",
    "gangbanger",
    "gangsta",
    "gatorbait",
    "gay",
    "gaymuthafuckinwhore",
    "gaysex ",
    "geez",
    "geezer",
    "geni",
    "genital",
    "german",
    "getiton",
    "gin",
    "ginzo",
    "gipp",
    "girls",
    "givehead",
    "glazeddonut",
    "gob",
    "god",
    "godammit",
    "goddamit",
    "goddammit",
    "goddamn",
    "goddamned",
    "goddamnes",
    "goddamnit",
    "goddamnmuthafucker",
    "goldenshower",
    "gonorrehea",
    "gonzagas",
    "gook",
    "gotohell",
    "goy",
    "goyim",
    "greaseball",
    "gringo",
    "groe",
    "gross",
    "grostulation",
    "gubba",
    "gummer",
    "gun",
    "gyp",
    "gypo",
    "gypp",
    "gyppie",
    "gyppo",
    "gyppy",
    "hamas",
    "handjob",
    "hapa",
    "harder",
    "hardon",
    "harem",
    "headfuck",
    "headlights",
    "hebe",
    "heeb",
    "hell",
    "henhouse",
    "heroin",
    "herpes",
    "heterosexual",
    "hijack",
    "hijacker",
    "hijacking",
    "hillbillies",
    "hindoo",
    "hiscock",
    "hitler",
    "hitlerism",
    "hitlerist",
    "hiv",
    "ho",
    "hobo",
    "hodgie",
    "hoes",
    "hole",
    "holestuffer",
    "homicide",
    "homo",
    "homobangers",
    "homosexual",
    "honger",
    "honk",
    "honkers",
    "honkey",
    "honky",
    "hook",
    "hooker",
    "hookers",
    "hooters",
    "hore",
    "hork",
    "horn",
    "horney",
    "horniest",
    "horny",
    "horseshit",
    "hosejob",
    "hoser",
    "hostage",
    "hotdamn",
    "hotpussy",
    "hottotrot",
    "hummer",
    "husky",
    "hussy",
    "hustler",
    "hymen",
    "hymie",
    "iblowu",
    "idiot",
    "ikey",
    "illegal",
    "incest",
    "insest",
    "intercourse",
    "interracial",
    "intheass",
    "inthebuff",
    "israel",
    "israeli",
    "israel's",
    "italiano",
    "itch",
    "jackass",
    "jackoff",
    "jackshit",
    "jacktheripper",
    "jade",
    "jap",
    "japanese",
    "japcrap",
    "jebus",
    "jeez",
    "jerkoff",
    "jesus",
    "jesuschrist",
    "jew",
    "jewish",
    "jiga",
    "jigaboo",
    "jigg",
    "jigga",
    "jiggabo",
    "jigger ",
    "jiggy",
    "jihad",
    "jijjiboo",
    "jimfish",
    "jism",
    "jiz ",
    "jizim",
    "jizjuice",
    "jizm ",
    "jizz",
    "jizzim",
    "jizzum",
    "joint",
    "juggalo",
    "jugs",
    "junglebunny",
    "kaffer",
    "kaffir",
    "kaffre",
    "kafir",
    "kanake",
    "kid",
    "kigger",
    "kike",
    "kill",
    "killed",
    "killer",
    "killing",
    "kills",
    "kink",
    "kinky",
    "kissass",
    "kkk",
    "knife",
    "knockers",
    "kock",
    "kondum",
    "koon",
    "kotex",
    "krap",
    "krappy",
    "kraut",
    "kum",
    "kumbubble",
    "kumbullbe",
    "kummer",
    "kumming",
    "kumquat",
    "kums",
    "kunilingus",
    "kunnilingus",
    "kunt",
    "ky",
    "kyke",
    "lactate",
    "laid",
    "lapdance",
    "latin",
    "lesbain",
    "lesbayn",
    "lesbian",
    "lesbin",
    "lesbo",
    "lez",
    "lezbe",
    "lezbefriends",
    "lezbo",
    "lezz",
    "lezzo",
    "liberal",
    "libido",
    "licker",
    "lickme",
    "lies",
    "limey",
    "limpdick",
    "limy",
    "lingerie",
    "liquor",
    "livesex",
    "loadedgun",
    "lolita",
    "looser",
    "loser",
    "lotion",
    "lovebone",
    "lovegoo",
    "lovegun",
    "lovejuice",
    "lovemuscle",
    "lovepistol",
    "loverocket",
    "lowlife",
    "lsd",
    "lubejob",
    "lucifer",
    "luckycammeltoe",
    "lugan",
    "lynch",
    "macaca",
    "mad",
    "mafia",
    "magicwand",
    "mams",
    "manhater",
    "manpaste",
    "marijuana",
    "mastabate",
    "mastabater",
    "masterbate",
    "masterblaster",
    "mastrabator",
    "masturbate",
    "masturbating",
    "mattressprincess",
    "meatbeatter",
    "meatrack",
    "meth",
    "mexican",
    "mgger",
    "mggor",
    "mickeyfinn",
    "mideast",
    "milf",
    "minority",
    "mockey",
    "mockie",
    "mocky",
    "mofo",
    "moky",
    "moles",
    "molest",
    "molestation",
    "molester",
    "molestor",
    "moneyshot",
    "mooncricket",
    "mormon",
    "moron",
    "moslem",
    "mosshead",
    "mothafuck",
    "mothafucka",
    "mothafuckaz",
    "mothafucked ",
    "mothafucker",
    "mothafuckin",
    "mothafucking ",
    "mothafuckings",
    "motherfuck",
    "motherfucked",
    "motherfucker",
    "motherfuckin",
    "motherfucking",
    "motherfuckings",
    "motherlovebone",
    "muff",
    "muffdive",
    "muffdiver",
    "muffindiver",
    "mufflikcer",
    "mulatto",
    "muncher",
    "munt",
    "murder",
    "murderer",
    "muslim",
    "naked",
    "narcotic",
    "nasty",
    "nastybitch",
    "nastyho",
    "nastyslut",
    "nastywhore",
    "nazi",
    "necro",
    "negro",
    "negroes",
    "negroid",
    "negro's",
    "nig",
    "niger",
    "nigerian",
    "nigerians",
    "nigg",
    "nigga",
    "niggah",
    "niggaracci",
    "niggard",
    "niggarded",
    "niggarding",
    "niggardliness",
    "niggardliness's",
    "niggardly",
    "niggards",
    "niggard's",
    "niggaz",
    "nigger",
    "niggerhead",
    "niggerhole",
    "niggers",
    "nigger's",
    "niggle",
    "niggled",
    "niggles",
    "niggling",
    "nigglings",
    "niggor",
    "niggur",
    "niglet",
    "nignog",
    "nigr",
    "nigra",
    "nigre",
    "nip",
    "nipple",
    "nipplering",
    "nittit",
    "nlgger",
    "nlggor",
    "nofuckingway",
    "nook",
    "nookey",
    "nookie",
    "noonan",
    "nooner",
    "nude",
    "nudger",
    "nuke",
    "nutfucker",
    "nymph",
    "ontherag",
    "oral",
    "orga",
    "orgasim ",
    "orgasm",
    "orgies",
    "orgy",
    "osama",
    "paki",
    "palesimian",
    "palestinian",
    "pansies",
    "pansy",
    "panti",
    "panties",
    "payo",
    "pearlnecklace",
    "peck",
    "pecker",
    "peckerwood",
    "pee",
    "peehole",
    "pee-pee",
    "peepshow",
    "peepshpw",
    "pendy",
    "penetration",
    "peni5",
    "penile",
    "penis",
    "penises",
    "penthouse",
    "period",
    "perv",
    "phonesex",
    "phuk",
    "phuked",
    "phuking",
    "phukked",
    "phukking",
    "phungky",
    "phuq",
    "pi55",
    "picaninny",
    "piccaninny",
    "pickaninny",
    "piker",
    "pikey",
    "piky",
    "pimp",
    "pimped",
    "pimper",
    "pimpjuic",
    "pimpjuice",
    "pimpsimp",
    "pindick",
    "piss",
    "pissed",
    "pisser",
    "pisses ",
    "pisshead",
    "pissin ",
    "pissing",
    "pissoff ",
    "pistol",
    "pixie",
    "pixy",
    "playboy",
    "playgirl",
    "pocha",
    "pocho",
    "pocketpool",
    "pohm",
    "polack",
    "pom",
    "pommie",
    "pommy",
    "poo",
    "poon",
    "poontang",
    "poop",
    "pooper",
    "pooperscooper",
    "pooping",
    "poorwhitetrash",
    "popimp",
    "porchmonkey",
    "porn",
    "pornflick",
    "pornking",
    "porno",
    "pornography",
    "pornprincess",
    "pot",
    "poverty",
    "premature",
    "pric",
    "prick",
    "prickhead",
    "primetime",
    "propaganda",
    "pros",
    "prostitute",
    "protestant",
    "pu55i",
    "pu55y",
    "pube",
    "pubic",
    "pubiclice",
    "pud",
    "pudboy",
    "pudd",
    "puddboy",
    "puke",
    "puntang",
    "purinapricness",
    "puss",
    "pussie",
    "pussies",
    "pussy",
    "pussycat",
    "pussyeater",
    "pussyfucker",
    "pussylicker",
    "pussylips",
    "pussylover",
    "pussypounder",
    "pusy",
    "quashie",
    "queef",
    "queer",
    "quickie",
    "quim",
    "ra8s",
    "rabbi",
    "racial",
    "racist",
    "radical",
    "radicals",
    "raghead",
    "randy",
    "rape",
    "raped",
    "raper",
    "rapist",
    "rearend",
    "rearentry",
    "rectum",
    "redlight",
    "redneck",
    "reefer",
    "reestie",
    "refugee",
    "reject",
    "remains",
    "rentafuck",
    "republican",
    "rere",
    "retard",
    "retarded",
    "ribbed",
    "rigger",
    "rimjob",
    "rimming",
    "roach",
    "robber",
    "roundeye",
    "rump",
    "russki",
    "russkie",
    "sadis",
    "sadom",
    "samckdaddy",
    "sandm",
    "sandnigger",
    "satan",
    "scag",
    "scallywag",
    "scat",
    "schlong",
    "screw",
    "screwyou",
    "scrotum",
    "scum",
    "semen",
    "seppo",
    "servant",
    "sex",
    "sexed",
    "sexfarm",
    "sexhound",
    "sexhouse",
    "sexing",
    "sexkitten",
    "sexpot",
    "sexslave",
    "sextogo",
    "sextoy",
    "sextoys",
    "sexual",
    "sexually",
    "sexwhore",
    "sexy",
    "sexymoma",
    "sexy-slim",
    "shag",
    "shaggin",
    "shagging",
    "shat",
    "shav",
    "shawtypimp",
    "sheeney",
    "shhit",
    "shinola",
    "shit",
    "shitcan",
    "shitdick",
    "shite",
    "shiteater",
    "shited",
    "shitface",
    "shitfaced",
    "shitfit",
    "shitforbrains",
    "shitfuck",
    "shitfucker",
    "shitfull",
    "shithapens",
    "shithappens",
    "shithead",
    "shithouse",
    "shiting",
    "shitlist",
    "shitola",
    "shitoutofluck",
    "shits",
    "shitstain",
    "shitted",
    "shitter",
    "shitting",
    "shitty ",
    "shoot",
    "shooting",
    "shortfuck",
    "showtime",
    "sick",
    "sissy",
    "sixsixsix",
    "sixtynine",
    "sixtyniner",
    "skank",
    "skankbitch",
    "skankfuck",
    "skankwhore",
    "skanky",
    "skankybitch",
    "skankywhore",
    "skinflute",
    "skum",
    "skumbag",
    "slant",
    "slanteye",
    "slapper",
    "slaughter",
    "slav",
    "slave",
    "slavedriver",
    "sleezebag",
    "sleezeball",
    "slideitin",
    "slime",
    "slimeball",
    "slimebucket",
    "slopehead",
    "slopey",
    "slopy",
    "slut",
    "sluts",
    "slutt",
    "slutting",
    "slutty",
    "slutwear",
    "slutwhore",
    "smack",
    "smackthemonkey",
    "smut",
    "snatch",
    "snatchpatch",
    "snigger",
    "sniggered",
    "sniggering",
    "sniggers",
    "snigger's",
    "sniper",
    "snot",
    "snowback",
    "snownigger",
    "sob",
    "sodom",
    "sodomise",
    "sodomite",
    "sodomize",
    "sodomy",
    "sonofabitch",
    "sonofbitch",
    "sooty",
    "sos",
    "soviet",
    "spaghettibender",
    "spaghettinigger",
    "spank",
    "spankthemonkey",
    "sperm",
    "spermacide",
    "spermbag",
    "spermhearder",
    "spermherder",
    "spic",
    "spick",
    "spig",
    "spigotty",
    "spik",
    "spit",
    "spitter",
    "splittail",
    "spooge",
    "spreadeagle",
    "spunk",
    "spunky",
    "squaw",
    "stagg",
    "stiffy",
    "strapon",
    "stringer",
    "stripclub",
    "stroke",
    "stroking",
    "stupid",
    "stupidfuck",
    "stupidfucker",
    "suck",
    "suckdick",
    "sucker",
    "suckme",
    "suckmyass",
    "suckmydick",
    "suckmytit",
    "suckoff",
    "suicide",
    "swallow",
    "swallower",
    "swalow",
    "swastika",
    "sweetness",
    "syphilis",
    "taboo",
    "taff",
    "tampon",
    "tang",
    "tantra",
    "tarbaby",
    "tard",
    "teat",
    "terror",
    "terrorist",
    "teste",
    "testicle",
    "testicles",
    "thicklips",
    "thirdeye",
    "thirdleg",
    "threesome",
    "threeway",
    "timbernigger",
    "tinkle",
    "tit",
    "titbitnipply",
    "titfuck",
    "titfucker",
    "titfuckin",
    "titjob",
    "titlicker",
    "titlover",
    "tits",
    "tittie",
    "titties",
    "titty",
    "tnt",
    "toilet",
    "tongethruster",
    "tongue",
    "tonguethrust",
    "tonguetramp",
    "tortur",
    "torture",
    "tosser",
    "towelhead",
    "trailertrash",
    "tramp",
    "trannie",
    "tranny",
    "transexual",
    "transsexual",
    "transvestite",
    "triplex",
    "trisexual",
    "trojan",
    "trots",
    "tuckahoe",
    "tunneloflove",
    "turd",
    "turnon",
    "twat",
    "twink",
    "twinkie",
    "twobitwhore",
    "uck",
    "uk",
    "unfuckable",
    "upskirt",
    "uptheass",
    "upthebutt",
    "urinary",
    "urinate",
    "urine",
    "usama",
    "uterus",
    "vagina",
    "vaginal",
    "vatican",
    "vibr",
    "vibrater",
    "vibrator",
    "vietcong",
    "violence",
    "virgin",
    "virginbreaker",
    "vomit",
    "vulva",
    "wab",
    "wank",
    "wanker",
    "wanking",
    "waysted",
    "weapon",
    "weenie",
    "weewee",
    "welcher",
    "welfare",
    "wetb",
    "wetback",
    "wetspot",
    "whacker",
    "whash",
    "whigger",
    "whiskey",
    "whiskeydick",
    "whiskydick",
    "whit",
    "whitenigger",
    "whites",
    "whitetrash",
    "whitey",
    "whiz",
    "whop",
    "whore",
    "whorefucker",
    "whorehouse",
    "wigger",
    "willie",
    "williewanker",
    "willy",
    "wn",
    "wog",
    "women's",
    "wop",
    "wtf",
    "wuss",
    "wuzzie",
    "xtc",
    "xxx",
    "yankee",
    "yellowman",
    "zigabo",
    "zipperhead",
  ];

  name_tokens = name.toLowerCase().split(" ");
  message_tokens = message.toLowerCase().split(" ");

  // check for explicit match with a word in the blocked list
  const tokens = name_tokens.concat(message_tokens); // keep name then message order
  const anyMatched = tokens.some((token) => {
    if (blocked.includes(token)) {
      console.log(token);
      return true;
    }
    return false;
  });

  // check the other way around, if any of the blocked words are a substring of our tokens joining with no spaces (to catch e.g. stupidmotherfucker)
  // we don't want substrings of common words like "ass" < "Class" to be filtered out, so only compare blocked words 5 characters or greater
  const blob = tokens.join("");
  const anyInBlob = blocked.some((profanity) => {
    if (profanity.length > 4 && blob.includes(profanity)) {
      console.log(profanity);
      return true;
    }
    return false;
  });

  return anyMatched || anyInBlob;
};
