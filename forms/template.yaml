AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: SAM Template for React app hosted with S3 and CloudFront - intended for region us-east-1
Parameters:
  DomainName:
    Type: String
    Description: Domain name for accessing forms app
    Default: forms.jaminproductions.com
  JaminProductionsHostedZoneId:
    Type: String
    Description: Hosted zone id of jaminproductions.com (Route53)
    Default: Z04082273T7TZTO2XG3A9
Resources:
  ReactAppS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref DomainName
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
  ReactAppS3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref ReactAppS3Bucket
      PolicyDocument:
        Id: PolicyForCloudFrontPrivateContent
        Version: "2012-10-17"
        Statement:
          - Sid: AllowCloudFrontServicePrincipal
            Effect: Allow
            Principal:
              Service: cloudfront.amazonaws.com
            Action: s3:GetObject
            Resource: !Sub "arn:aws:s3:::${DomainName}/*"
            Condition:
              StringEquals:
                AWS:SourceArn: !Sub arn:aws:cloudfront::${AWS::AccountId}:distribution/${CloudFrontDistribution}
  ReactAppOriginAccessControl:
    Type: AWS::CloudFront::OriginAccessControl
    Properties:
      OriginAccessControlConfig:
        Name: !Sub "${DomainName}.s3.us-east-1.amazonaws.com"
        Description: "Origin access control for forms.jaminprodcutions.com"
        OriginAccessControlOriginType: s3
        SigningBehavior: always
        SigningProtocol: sigv4
  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Comment: "Distribution for 'Jamin Productions forms submission site"
        Origins:
          - DomainName: !GetAtt ReactAppS3Bucket.RegionalDomainName
            Id: !Sub "${DomainName}-react-app-s3-origin"
            OriginAccessControlId: !GetAtt ReactAppOriginAccessControl.Id
            S3OriginConfig: {}
        Enabled: "true"
        DefaultRootObject: index.html
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
          TargetOriginId: !Sub "${DomainName}-react-app-s3-origin"
          CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6 # CachingOptimized
          OriginRequestPolicyId: 88a5eaf4-2fd4-4709-b370-b4c650ea3fcf # CORS-S3Origin
          ViewerProtocolPolicy: redirect-to-https
        Aliases:
          - !Ref DomainName
          - requests.jaminproductions.com
        PriceClass: PriceClass_100
        CustomErrorResponses:
          - ErrorCode: 404
            ResponseCode: 200
            ResponsePagePath: /index.html
          - ErrorCode: 403
            ResponseCode: 200
            ResponsePagePath: /index.html
        ViewerCertificate:
          AcmCertificateArn: arn:aws:acm:us-east-1:783358359740:certificate/352b4616-b73c-4d83-acc4-0c8451383464
          MinimumProtocolVersion: TLSv1.2_2021
          SslSupportMethod: sni-only
  FormsSiteDNSRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref JaminProductionsHostedZoneId
      Name: !Ref DomainName
      AliasTarget:
        DNSName: !GetAtt CloudFrontDistribution.DomainName
        HostedZoneId: Z2FDTNDATAQYW2
      Type: A
  # this replaces requests.jaminproductions.com, so map it to the same distribution
  RequestsSiteDNSMapping:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref JaminProductionsHostedZoneId
      Name: requests.jaminproductions.com
      AliasTarget:
        DNSName: !GetAtt CloudFrontDistribution.DomainName
        HostedZoneId: Z2FDTNDATAQYW2
      Type: A

Outputs:
  ReactAppDomainName:
    Value: !GetAtt CloudFrontDistribution.DomainName
    Export:
      Name: !Sub ${AWS::StackName}-ReactAppDomainName
  CloudFrontDistributionId:
    Value: !GetAtt CloudFrontDistribution.Id
    Export:
      Name: !Sub ${AWS::StackName}-CloudFrontDistributionId
  ReactAppS3BucketName:
    Value: !Ref ReactAppS3Bucket
    Export:
      Name: !Sub ${AWS::StackName}-ReactAppS3BucketName
  ReactAppS3BucketArn:
    Value: !GetAtt ReactAppS3Bucket.Arn
    Export:
      Name: !Sub ${AWS::StackName}-ReactAppS3BucketArn
